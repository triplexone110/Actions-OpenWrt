name: Build ImmortalWrt

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: v24.10.2
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano quilt pigz rsync sharutils silversearcher-ag scons subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone source code
      run: git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt

    - name: Load custom configuration
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P1_SH
        chmod +x $DIY_P2_SH
        mv $DIY_P1_SH openwrt/diy-part1.sh
        mv $DIY_P2_SH openwrt/diy-part2.sh

    - name: Update feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a

    - name: Run custom script part 1
      run: |
        cd openwrt
        ./diy-part1.sh

    - name: Install feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a

    - name: Verify LuCI feeds
      run: |
        cd openwrt
        ./scripts/feeds install luci luci-i18n-base-zh-cn

    - name: Compile LuCI dependencies
      run: |
        cd openwrt
        make package/luci/compile V=s -j$(nproc)  # 手动编译 luci 包
        make package/luci-i18n-base-zh-cn/compile V=s -j$(nproc)  # 手动编译 zh-cn 包

    - name: Run custom script part 2
      run: |
        cd openwrt
        ./diy-part2.sh

    - name: Update .config file
      run: |
        cd openwrt
        make oldconfig

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload bin directory
      uses: actions/upload-artifact@v4
      if: env.UPLOAD_BIN_DIR == 'true' && steps.compile.outputs.status == 'success'
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success'
      with:
        name: ImmortalWrt-firmware
        path: ${{ env.FIRMWARE }}
